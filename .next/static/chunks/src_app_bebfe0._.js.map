{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HarshaProject/HarryProject/src/app/components/RegistrationForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { X } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\"; \r\n\r\nexport default function RegistrationForm() {\r\n  const router = useRouter(); \r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(true); // Modal initially open\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    // Check if passwords match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/seller/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message);\r\n\r\n      setSuccess(\"Registration successful! Please log in.\");\r\n      setTimeout(() => {\r\n        setIsOpen(false); // Close the form after registration\r\n        router.push(\"/Sell-log-in\"); // Navigate to the login page after successful registration\r\n      }, 2000); // Wait 2 seconds before navigating\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false); // Close the form when X button is clicked\r\n  };\r\n\r\n  // If the form is closed, render nothing\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50\"\r\n    >\r\n      <motion.div\r\n        initial={{ scale: 0.9, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        exit={{ scale: 0.9, opacity: 0 }}\r\n        className=\"bg-white rounded-lg p-8 shadow-xl max-w-md w-full relative\"\r\n      >\r\n        {/* Close Button */}\r\n        <button onClick={handleClose} className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\">\r\n          <X size={24} />\r\n        </button>\r\n\r\n        <h2 className=\"text-2xl font-bold mb-6 text-yellow-600\">Register to Sell</h2>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n        \r\n        <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"mobile\" className=\"block text-sm font-medium text-gray-700\">Mobile Number</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"mobile\"\r\n              name=\"mobile\"\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-yellow-500 focus:border-yellow-500\"\r\n            />\r\n          </div>\r\n\r\n          <motion.button\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            type=\"submit\"\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\r\n          >\r\n            Register\r\n          </motion.button>\r\n\r\n          <p className=\"text-center text-gray-600\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              onClick={() => router.push(\"/Sell-log-in\")} \r\n              className=\"text-yellow-600 hover:text-yellow-700 transition-colors\"\r\n            >\r\n              Sign In\r\n            </button>\r\n          </p>\r\n        </form>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HarshaProject/HarryProject/src/app/Sell-sign-up/page.tsx"],"sourcesContent":["'use client'\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\n\r\nexport default function SellSignupPage() {\r\n  return (\r\n    <div>\r\n      <RegistrationForm  />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBACE,6LAAC;kBACC,cAAA,6LAAC,gJAAA,CAAA,UAAgB;;;;;;;;;;AAGvB;KANwB"}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}