{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HarshaProject/HarryProject/src/context/auth-context.tsx"],"sourcesContent":["// context/auth-context.tsx\r\n'use client';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  \r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  login: (user: User) => void;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType);\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/auth/check-auth', {\r\n          credentials: 'include',\r\n        });\r\n        \r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setUser(data.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    router.push('/homepage');\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch('http://localhost:5000/api/auth/logout', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n    });\r\n    setUser(null);\r\n    router.push('/log-in');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isLoading, login, logout,}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;AAG3B;AACA;AAHA;;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB,CAAC;AAE7C,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,6CAA6C;oBACnE,aAAa;gBACf;gBAEA,IAAI,IAAI,EAAE,EAAE;oBACV,MAAM,OAAO,MAAM,IAAI,IAAI;oBAC3B,QAAQ,KAAK,IAAI;gBACnB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;YACtC,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,SAAS;QACb,MAAM,MAAM,yCAAyC;YACnD,QAAQ;YACR,aAAa;QACf;QACA,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAO;QAAO;kBAC3D;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}